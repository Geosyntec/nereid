# Austin Orr 11/27/2019
# This approach is the fastest to build and yields reasonably 
# small images at ~500mb each. The alipine+install variant of this
# pattern is able to reduce each image to ~250MB but takes considerable
# time to build and is considerably more complex for scipy and pandas.


From redis:5.0.6-alpine as redis
COPY redis.conf /redis.conf


FROM python:3.7 as builder
COPY requirements.txt /requirements.txt
COPY requirements_tests.txt /requirements_tests.txt
RUN mkdir /core && \
  pip wheel \
    --wheel-dir=/core \
    -r /requirements.txt
RUN mkdir /tsts && \
  pip wheel \
    --wheel-dir=/tsts \
    -r /requirements_tests.txt
RUN mkdir /serve && \
  pip wheel \
    --wheel-dir=/serve \
    gunicorn \
    uvicorn


FROM python:3.7-slim-buster as core
COPY --from=builder /core /core
COPY requirements.txt /requirements.txt
RUN apt-get update && \
  apt-get install -y --no-install-recommends graphviz && \ 
  rm -rf /var/lib/apt/lists/* && \ 
  pip install \
    --no-index \
    --no-cache-dir \
    --find-links=/core \
    -r /requirements.txt && \
    find /usr/local/lib/python3.*/ -name 'tests' -exec rm -r '{}' + && \
    find /usr/local/lib/python3.*/site-packages/ -name '*.so' -print -exec sh -c 'file "{}" | grep -q "not stripped" && strip -s "{}"' \; && \
    rm -rf /core/* 
COPY ./nereid /nereid/nereid
WORKDIR /nereid
ENV PYTHONPATH=/nereid


FROM core as celeryworker
ENV C_FORCE_ROOT=1
COPY ./scripts/run-worker.sh /run-worker.sh
RUN chmod +x /run-worker.sh
CMD ["bash", "/run-worker.sh"]


FROM core as nereid
COPY --from=builder /serve /serve
RUN pip install \
  --no-index \
  --no-cache-dir \
  --find-links=/serve \
  gunicorn uvicorn && \
  find /usr/local/lib/python3.*/ -name 'tests' -exec rm -r '{}' + && \
  find /usr/local/lib/python3.*/site-packages/ -name '*.so' -print -exec sh -c 'file "{}" | grep -q "not stripped" && strip -s "{}"' \; && \
  rm -rf /serve/*
COPY gunicorn_conf.py /gunicorn_conf.py
COPY ./scripts/start.sh /start.sh
RUN chmod +x /start.sh
COPY ./scripts/start-reload.sh /start-reload.sh
RUN chmod +x /start-reload.sh
EXPOSE 8888
EXPOSE 80


FROM core as nereid-tests
COPY requirements_tests.txt /requirements_tests.txt
COPY --from=builder /tsts /tsts
RUN pip install \
  --no-index \
  --no-cache-dir \
  --find-links=/tsts \
  -r /requirements_tests.txt && \
  find /usr/local/lib/python3.*/ -name 'tests' -exec rm -r '{}' + && \
  find /usr/local/lib/python3.*/site-packages/ -name '*.so' -print -exec sh -c 'file "{}" | grep -q "not stripped" && strip -s "{}"' \; && \
  rm -rf /tsts/*
COPY ./scripts/run-tests.sh /run-tests.sh
RUN chmod +x /run-tests.sh
## This will make the container wait, doing nothing, but alive
CMD ["bash", "-c", "while true; do sleep 1; done"]
EXPOSE 8888